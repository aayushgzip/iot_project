#include <LiquidCrystal.h>
#include <Keypad.h>
#include <Servo.h>
const int buzzerPin = 0; 
// Define the pin numbers for the LCD
const int rs = 8; 
const int en = 7;
const int d4 = 6; 
const int d5 = 5; 
const int d6 = 4; 
const int d7 = 3; 
const int tiltPin = 0;


LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

// Keypad configuration
const byte ROWS = 4;
const byte COLS = 4;
char keys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};
byte rowPins[ROWS] = {A4, A5, 2, 1};
byte colPins[COLS] = {A0, A1, A2, A3};
Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);

// Define servo objects
Servo servo1;
Servo servo2;
Servo servo3;
Servo servo4;
Servo servo5;

int currentChoice = 1; 

void setup() {
 
  lcd.begin(16, 2);
  servo1.attach(9);
  servo2.attach(10);
  servo3.attach(11);
  servo4.attach(12);
  servo5.attach(13);
    pinMode(tiltPin, INPUT);
   pinMode(buzzerPin, OUTPUT);
  // Display the menu
  displayMenu(currentChoice);
}

void loop() {
    int tiltState = digitalRead(tiltPin);

 
  if (tiltState == HIGH) {
    activateAlarm();
    lockServos(); 
  } else {
    
   
  char key = keypad.getKey(); // Read keypad input
  if (key != NO_KEY) {
   
    if (key == 'A') { // Move up
      currentChoice--;
      if (currentChoice < 1) {
        currentChoice = 5; 
      }
      displayMenu(currentChoice);
    } else if (key == 'B') { // Move down
      currentChoice++;
      if (currentChoice > 5) {
        currentChoice = 1; 
      }
     displayMenu(currentChoice);
    } else {
    
      switch (currentChoice) {
        case 1:
          servo1.write(180);
          delay(3000); 
          servo1.write(90); 
          displayMenu(currentChoice);
          break;
        case 2:
          servo2.write(180);
          delay(3000); 
          servo2.write(90); 
          displayMenu(currentChoice);
          break;
        case 3:
          servo3.write(180);
          delay(3000); 
          servo3.write(90); 
          displayMenu(currentChoice);
          break;
        case 4:
          servo4.write(180);
          delay(3000); 
          servo4.write(90); 
          displayMenu(currentChoice);
          break;
        case 5:
          servo5.write(180); 
          delay(3000);
          servo5.write(90); 
          displayMenu(currentChoice);
          break;
        default:
          break;
      }
    }
  }
}
}
 
void displayMenu(int curr) {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Menu:");
  lcd.setCursor(0, 1);
  lcd.print(curr);
  lcd.print(". ");
  switch (curr) {
    case 1:
      lcd.print("Cup Noodles");
      break;
    case 2:
      lcd.print("Sandwich");
      break;
    case 3:
      lcd.print("Pizza");
      break;
    case 4:
      lcd.print("Soup");
      break;
    case 5:
      lcd.print("Hot Dog");
      break;
    default:
      break;
  }
}

void activateAlarm() {
    tone(buzzerPin, 2000);  
  delay(1000);             
  noTone(buzzerPin); 
  }


void lockServos() {
  servo1.detach();
  servo2.detach();
  servo3.detach();
  servo4.detach();
  servo5.detach();
}
